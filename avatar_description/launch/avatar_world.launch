<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="xacro_robot_file" default="$(find avatar_description)/prova.urdf" />
    <param name="robot_description" command="$(find xacro)/xacro '$(arg xacro_robot_file)' "/>

    <!-- GAZEBO arguments -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <!--arg name="load_gripper" default="true"/-->

    <!-- Spawning arguments -->
    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.01" />
    <arg name="robot_name" default="avatar" />

    <!--launch GAZEBO with own world configuration -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" default="worlds/empty.world"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <node name="urdf_spawner_avatar" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -model $(arg robot_name) -param /robot_description"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find avatar_moveit)/config/avatar_controllers.yaml" command="load"/>


    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_arm_controller" />
    <node name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />


    <!-- convert joint states to TF transforms for rviz, etc ->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /-->

    <!--include file="$(find avatar_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="true"/>
        <!-arg name="load_gripper" value="$(arg load_gripper)" /->
    </include>
    <include file="$(find avatar_moveit_config)/launch/move_group.launch">
        <!-arg name="load_gripper" value="$(arg load_gripper)" /->
    </include>
    <group if="$(arg gui)">
        <include file="$(find avatar_moveit_config)/launch/moveit_rviz.launch" />
    </group>

    <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

    <!- launch robot control node for moveit motion planning ->
    <node pkg="panda_simulation" type="robot_control_node" name="robot_control_node" output="screen"/-->

</launch>
